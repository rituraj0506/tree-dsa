top view and bottom view code is almost same just one line not take of top view becoz in top view if line is already in map we not consider of that node of line
but in bottom view we overwrite it

// top view  t(c)=0(2N) becoz use of queue and map so o(n) and s(c)= o(n) for both code
  vector<int> topView(Node *root)
    {
        vector<int>ans;
        if(root==NULL)
        return ans;
        queue<pair<Node*,int>>q;
         q.push({root,0});
        map<int,int>m;
       
        while(!q.empty())
        {
            auto it=q.front();
            q.pop();
            Node*node=it.first;
            int line=it.second;
            if(m.find(line)==m.end())
             m[line]=node->data;
             if(node->left!=NULL)
             q.push({node->left,line-1});
             if(node->right!=NULL)
             q.push({node->right,line+1});
        }
        for(auto it:m)
        {
            ans.push_back(it.second);
        }
        return ans;
    }
    
    
    // Bottom view 
        vector <int> bottomView(Node *root) {
     vector<int>ans;
     if(root==NULL)
     return ans;
     queue<pair<Node*,int>>q;
     q.push({root,0});
     map<int,int>m;
     while(!q.empty())
     {
        auto it=q.front();
        q.pop();
        Node*node=it.first;
        int line=it.second;
        m[line]=node->data;
        if(node->left!=NULL)
          q.push({node->left,line-1});
        if(node->right!=NULL)
          q.push({node->right,line+1});
     }
      for(auto it:m)
     {
         ans.push_back(it.second);
     }
     return ans;
    }
    
