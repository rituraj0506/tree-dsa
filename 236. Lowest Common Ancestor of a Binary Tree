 apporch: the moment you go to any node part of lca like 4 lca(4,7)=2 return that instead of go to left and right if both give nuLl return dirctly null
 
 TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
        if(root==NULL||root==p||root==q)
            return root;
        TreeNode*left=lowestCommonAncestor(root->left,p,q);
        TreeNode*right=lowestCommonAncestor(root->right,p,q);
        if(left==NULL)
            return right;
         if(right==NULL)
            return left;
        else // incase both return not null fe foun val
            return root;
    }
    t(c) =o(n)
    s(c)=o(n)
