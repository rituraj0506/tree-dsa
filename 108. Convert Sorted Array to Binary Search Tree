TreeNode*buildTree(vector<int>& nums,int l,int h)
    {
        if(l<=h)
        {
            int mid=l+(h-l)/2;
            TreeNode*root=new TreeNode(nums[mid]);
            root->left=buildTree(nums,l,mid-1);
            root->right=buildTree(nums,mid+1,h);
            return root;
        }
         return NULL;
    }
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        // element sorted inorder traversal so root is in mid hint in ques;
        return buildTree(nums,0,nums.size()-1);
    }
